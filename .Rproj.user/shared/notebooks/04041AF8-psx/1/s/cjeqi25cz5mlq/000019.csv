"0",""
"0","# Train logistic regression on train data"
"0","glm_train <- glm(direction ~ lag1 + lag2 + lag3 + lag4 + lag5 + vol,"
"0","                 data = train_data, family = binomial)"
"0",""
"0","# Predict on train data"
"0","train_data <- train_data %>%"
"0","  mutate("
"0","    glm_probs = predict(glm_train, newdata = train_data, type = ""response""),"
"0","    glm_pred = if_else(glm_probs > 0.5, ""Up"", ""Down"")"
"0","  )"
"0",""
"0","# Calculate confusion matrix and accuracy for train data"
"0","train_confusion_matrix <- table(glm_pred = train_data$glm_pred, actual = train_data$direction)"
"0","glm_train_accuracy <- mean(train_data$glm_pred == train_data$direction)"
"0",""
"0","# Predict on test data"
"0","test_data <- test_data %>%"
"0","  mutate("
"0","    glm_probs = predict(glm_train, newdata = test_data, type = ""response""),"
"0","    glm_pred = if_else(glm_probs > 0.5, ""Up"", ""Down"")"
"0","  )"
"0",""
"0","# Calculate confusion matrix and accuracy for test data"
"0","test_confusion_matrix <- table(glm_pred = test_data$glm_pred, actual = test_data$direction)"
"0","glm_test_accuracy <- mean(test_data$glm_pred == test_data$direction)"
"0",""
"0","# Display results"
"0","list("
"0","  train_confusion_matrix = train_confusion_matrix,"
"0","  glm_train_accuracy = glm_train_accuracy,"
"0","  test_confusion_matrix = test_confusion_matrix,"
"0","  glm_test_accuracy = glm_test_accuracy"
"0",")"
"1","$train_confusion_matrix
"
"1","        actual
"
"1","glm_pred"
"1","   0"
"1","   1"
"1","
    Down"
"1"," 756"
"1"," 510"
"1","
    Up  "
"1"," 119"
"1"," 222"
"1","
"
"1","
"
"1","$glm_train_accuracy
"
"1","[1]"
"1"," 0"
"1","
"
"1","
"
"1","$test_confusion_matrix
"
"1","        actual
"
"1","glm_pred"
"1"," Up"
"1"," Down"
"1","
    Down"
"1","  0"
"1","    0"
"1","
    Up  "
"1","  0"
"1","    0"
"1","
"
"1","
"
"1","$glm_test_accuracy
"
"1","[1]"
"1"," NA"
"1","
"
"1","
"
