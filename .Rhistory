})
}
if (!is.null(best_model)) {
cat("  Best model:", best_spec, "with AIC:", round(best_aic, 4), "\n")
# Extract long-run coefficients
longrun_coeffs <- NULL
tryCatch({
lr_result <- multipliers(best_model)
longrun_coeffs <- lr_result
cat("  Long-run coefficients extracted successfully\n")
}, error = function(e) {
cat("  Long-run coefficients extraction failed:", e$message, "\n")
})
# Try bounds test but don't fail if it doesn't work
cointegration_status <- "Not tested"
tryCatch({
bounds_result <- bounds_f_test(best_model, case = 2)
f_stat <- bounds_result$statistic
upper_bound <- bounds_result$tab[1, 3]
lower_bound <- bounds_result$tab[1, 2]
if (f_stat > upper_bound) {
cointegration_status <- "Cointegrated"
} else if (f_stat < lower_bound) {
cointegration_status <- "No Cointegration"
} else {
cointegration_status <- "Inconclusive"
}
}, error = function(e) {
cointegration_status <- "Test Failed"
})
return(list(
model = best_model,
spec = best_spec,
aic = best_aic,
longrun_coeffs = longrun_coeffs,
cointegration = cointegration_status
))
} else {
cat("  No successful model for", dep_var, "\n")
return(NULL)
}
}
# Run analysis for all dependent variables
cat("Running ARDL analysis for all dependent variables...\n")
cat(rep("=", 60), "\n")
all_results <- list()
for (dep_var in dependent_vars) {
all_results[[dep_var]] <- extract_longrun_coeffs(dep_var, independent_vars, export_clean)
}
# Create comprehensive long-run coefficients comparison table
cat("\n", rep("=", 80), "\n")
cat("LONG-RUN COEFFICIENTS COMPARISON TABLE\n")
cat(rep("=", 80), "\n")
# Initialize the comparison table
longrun_comparison <- data.frame(
Variable = character(),
Model_Spec = character(),
AIC = numeric(),
Intercept = numeric(),
Intercept_SE = numeric(),
Intercept_pvalue = numeric(),
ipi_japan = numeric(),
ipi_japan_SE = numeric(),
ipi_japan_pvalue = numeric(),
ipi_india = numeric(),
ipi_india_SE = numeric(),
ipi_india_pvalue = numeric(),
ind_jap_bila_exch = numeric(),
ind_jap_bila_exch_SE = numeric(),
ind_jap_bila_exch_pvalue = numeric(),
volatility = numeric(),
volatility_SE = numeric(),
volatility_pvalue = numeric(),
Cointegration = character(),
stringsAsFactors = FALSE
)
# Extract coefficients for each variable
for (dep_var in names(all_results)) {
result <- all_results[[dep_var]]
if (!is.null(result) && !is.null(result$longrun_coeffs)) {
lr_coeffs <- result$longrun_coeffs
# Create a row for this variable
new_row <- data.frame(
Variable = dep_var,
Model_Spec = result$spec,
AIC = round(result$aic, 4),
Intercept = NA,
Intercept_SE = NA,
Intercept_pvalue = NA,
ipi_japan = NA,
ipi_japan_SE = NA,
ipi_japan_pvalue = NA,
ipi_india = NA,
ipi_india_SE = NA,
ipi_india_pvalue = NA,
ind_jap_bila_exch = NA,
ind_jap_bila_exch_SE = NA,
ind_jap_bila_exch_pvalue = NA,
volatility = NA,
volatility_SE = NA,
volatility_pvalue = NA,
Cointegration = result$cointegration,
stringsAsFactors = FALSE
)
# Fill in the coefficients
for (i in 1:nrow(lr_coeffs)) {
term <- lr_coeffs$Term[i]
if (term == "(Intercept)") {
new_row$Intercept <- round(lr_coeffs$Estimate[i], 4)
new_row$Intercept_SE <- round(lr_coeffs$`Std. Error`[i], 4)
new_row$Intercept_pvalue <- round(lr_coeffs$`Pr(>|t|)`[i], 4)
} else if (term == "ipi_japan") {
new_row$ipi_japan <- round(lr_coeffs$Estimate[i], 4)
new_row$ipi_japan_SE <- round(lr_coeffs$`Std. Error`[i], 4)
new_row$ipi_japan_pvalue <- round(lr_coeffs$`Pr(>|t|)`[i], 4)
} else if (term == "ipi_india") {
new_row$ipi_india <- round(lr_coeffs$Estimate[i], 4)
new_row$ipi_india_SE <- round(lr_coeffs$`Std. Error`[i], 4)
new_row$ipi_india_pvalue <- round(lr_coeffs$`Pr(>|t|)`[i], 4)
} else if (term == "ind_jap_bila_exch") {
new_row$ind_jap_bila_exch <- round(lr_coeffs$Estimate[i], 4)
new_row$ind_jap_bila_exch_SE <- round(lr_coeffs$`Std. Error`[i], 4)
new_row$ind_jap_bila_exch_pvalue <- round(lr_coeffs$`Pr(>|t|)`[i], 4)
} else if (term == "volatility") {
new_row$volatility <- round(lr_coeffs$Estimate[i], 4)
new_row$volatility_SE <- round(lr_coeffs$`Std. Error`[i], 4)
new_row$volatility_pvalue <- round(lr_coeffs$`Pr(>|t|)`[i], 4)
}
}
longrun_comparison <- rbind(longrun_comparison, new_row)
} else {
# Add a row indicating failure
new_row <- data.frame(
Variable = dep_var,
Model_Spec = "Failed",
AIC = NA,
Intercept = NA, Intercept_SE = NA, Intercept_pvalue = NA,
ipi_japan = NA, ipi_japan_SE = NA, ipi_japan_pvalue = NA,
ipi_india = NA, ipi_india_SE = NA, ipi_india_pvalue = NA,
ind_jap_bila_exch = NA, ind_jap_bila_exch_SE = NA, ind_jap_bila_exch_pvalue = NA,
volatility = NA, volatility_SE = NA, volatility_pvalue = NA,
Cointegration = "N/A",
stringsAsFactors = FALSE
)
longrun_comparison <- rbind(longrun_comparison, new_row)
}
}
# Print the full comparison table
print(longrun_comparison)
# Create simplified tables for easier viewing
cat("\n", rep("-", 80), "\n")
cat("SIMPLIFIED LONG-RUN COEFFICIENTS (Estimates Only)\n")
cat(rep("-", 80), "\n")
simplified_coeffs <- longrun_comparison[, c("Variable", "Model_Spec", "AIC",
"ipi_japan", "ipi_india",
"ind_jap_bila_exch", "volatility")]
print(simplified_coeffs)
cat("\n", rep("-", 80), "\n")
cat("STATISTICAL SIGNIFICANCE (p-values)\n")
cat(rep("-", 80), "\n")
pvalue_table <- longrun_comparison[, c("Variable", "ipi_japan_pvalue", "ipi_india_pvalue",
"ind_jap_bila_exch_pvalue", "volatility_pvalue")]
print(pvalue_table)
Std. Error`[i]
# Display the comprehensive results
cat("Comprehensive Econometric Results:\n")
print(econometric_results)
# Save to CSV
csv_filename <- "ARDL_LongRun_Coefficients_Results.csv"
write.csv(econometric_results, csv_filename, row.names = FALSE)
cat("\nResults saved to:", csv_filename, "\n")
# Create a publication-ready summary table
cat("\n", rep("-", 80), "\n")
cat("PUBLICATION-READY SUMMARY TABLE\n")
cat(rep("-", 80), "\n")
# Create formatted coefficient table with standard errors in parentheses
pub_table <- data.frame(
Variable = character(),
IPI_Japan = character(),
IPI_India = character(),
Bilateral_ExchRate = character(),
Volatility = character(),
ARDL_Spec = character(),
AIC = numeric(),
Cointegration = character(),
stringsAsFactors = FALSE
)
for (i in 1:nrow(econometric_results)) {
row <- econometric_results[i, ]
# Format coefficients with standard errors and significance
format_coeff <- function(coeff, se, sig) {
if (is.na(coeff)) return("N/A")
paste0(sprintf("%.4f", coeff), sig, "\n(", sprintf("%.4f", se), ")")
}
pub_row <- data.frame(
Variable = row$Dependent_Variable,
IPI_Japan = format_coeff(row$IPI_Japan_Coeff, row$IPI_Japan_SE, row$IPI_Japan_Significance),
IPI_India = format_coeff(row$IPI_India_Coeff, row$IPI_India_SE, row$IPI_India_Significance),
Bilateral_ExchRate = format_coeff(row$Bilateral_ExchRate_Coeff, row$Bilateral_ExchRate_SE, row$Bilateral_ExchRate_Significance),
Volatility = format_coeff(row$Volatility_Coeff, row$Volatility_SE, row$Volatility_Significance),
ARDL_Spec = row$ARDL_Specification,
AIC = row$Model_AIC,
Cointegration = row$Cointegration_Status,
stringsAsFactors = FALSE
)
pub_table <- rbind(pub_table, pub_row)
}
print(pub_table)
# Save publication table
pub_csv_filename <- "ARDL_Publication_Ready_Table.csv"
write.csv(pub_table, pub_csv_filename, row.names = FALSE)
cat("\nPublication-ready table saved to:", pub_csv_filename, "\n")
# Summary statistics
cat("\n", rep("=", 60), "\n")
cat("ECONOMETRIC ANALYSIS SUMMARY\n")
cat(rep("=", 60), "\n")
cat("Total variables analyzed:", nrow(econometric_results), "\n")
cat("Successful models:", sum(!is.na(econometric_results$Model_AIC)), "\n")
# Count significant coefficients
sig_count <- 0
total_coeffs <- 0
for (var in c("IPI_Japan", "IPI_India", "Bilateral_ExchRate", "Volatility")) {
sig_col <- paste0(var, "_Significance")
pval_col <- paste0(var, "_pValue")
significant <- sum(!is.na(econometric_results[[pval_col]]) &
econometric_results[[pval_col]] < 0.05, na.rm = TRUE)
total <- sum(!is.na(econometric_results[[pval_col]]), na.rm = TRUE)
cat(var, "- Significant coefficients:", significant, "out of", total, "\n")
sig_count <- sig_count + significant
total_coeffs <- total_coeffs + total
}
cat("\nOverall significance rate:", round(sig_count/total_coeffs * 100, 2), "% of coefficients are significant at 5% level\n")
cat("\nNotes:\n")
cat("- *** p<0.01, ** p<0.05, * p<0.10\n")
cat("- Standard errors in parentheses\n")
cat("- Coefficients represent long-run elasticities/relationships\n")
cat("\n", rep("=", 60), "\n")
cat("ANALYSIS COMPLETED SUCCESSFULLY!\n")
cat("All results exported to CSV files for further analysis.\n")
cat(rep("=", 60), "\n")
# Direct ARDL Analysis with Guaranteed CSV Output
# Load required libraries
library(readr)
library(dplyr)
library(readxl)
library(janitor)
library(ARDL)
# Read excel file
export <- read_excel("D:/RepTemplates/freelancing/exports_and_impots_data_19-09-2025.xlsx",
sheet = "Exports data 19-07-2025")
# Clean column names
export <- clean_names(export)
# Read year as time and all other as numeric
export <- export %>%
mutate(across(-year, as.numeric))
# Consider year as date
export$year <- as.Date(as.character(export$year), format = "%Y")
# Define dependent variables (columns 3-7)
dependent_vars <- c("anim_veg_oils_fats_processed",
"articles_of_artificial_plastic_mate",
"articles_of_paper_pulp_paperboard",
"cereal_preps_preps_of_flour_of_fr",
"chemical_materials_and_products_n")
# Define independent variables (last 4 columns)
independent_vars <- c("ipi_japan", "ipi_india", "ind_jap_bila_exch", "volatility")
# Remove rows with missing values in key variables
export_clean <- export[complete.cases(export[, c(dependent_vars, independent_vars)]), ]
cat("Working with", nrow(export_clean), "observations\n")
# Initialize the master results dataframe
results_master <- data.frame(
Dependent_Variable = character(),
ARDL_Specification = character(),
AIC = numeric(),
BIC = numeric(),
# Intercept
Intercept_Coeff = numeric(),
Intercept_SE = numeric(),
Intercept_tStat = numeric(),
Intercept_pValue = numeric(),
# IPI Japan
IPI_Japan_Coeff = numeric(),
IPI_Japan_SE = numeric(),
IPI_Japan_tStat = numeric(),
IPI_Japan_pValue = numeric(),
# IPI India
IPI_India_Coeff = numeric(),
IPI_India_SE = numeric(),
IPI_India_tStat = numeric(),
IPI_India_pValue = numeric(),
# Bilateral Exchange Rate
Bilateral_ExchRate_Coeff = numeric(),
Bilateral_ExchRate_SE = numeric(),
Bilateral_ExchRate_tStat = numeric(),
Bilateral_ExchRate_pValue = numeric(),
# Volatility
Volatility_Coeff = numeric(),
Volatility_SE = numeric(),
Volatility_tStat = numeric(),
Volatility_pValue = numeric(),
# Model diagnostics
Cointegration_Status = character(),
stringsAsFactors = FALSE
)
# Process each dependent variable
for (dep_var in dependent_vars) {
cat("\n", rep("=", 60), "\n")
cat("Processing:", dep_var, "\n")
cat(rep("=", 60), "\n")
# Prepare data
ardl_data <- export_clean[, c(dep_var, independent_vars)]
ardl_data <- ardl_data[complete.cases(ardl_data), ]
# Convert to time series
ardl_ts <- ts(ardl_data, start = c(1972), frequency = 1)
# Create formula
ardl_formula <- as.formula(paste(dep_var, "~", paste(independent_vars, collapse = " + ")))
# Test different specifications
specs <- list(
"ARDL(1,1,1,1,1)" = c(1, 1, 1, 1, 1),
"ARDL(2,1,1,1,1)" = c(2, 1, 1, 1, 1),
"ARDL(1,2,2,2,2)" = c(1, 2, 2, 2, 2),
"ARDL(2,2,2,2,2)" = c(2, 2, 2, 2, 2)
)
best_model <- NULL
best_aic <- Inf
best_spec <- ""
# Find best model
for (spec_name in names(specs)) {
tryCatch({
model <- ardl(ardl_formula, data = ardl_ts, order = specs[[spec_name]])
current_aic <- AIC(model)
cat(spec_name, "- AIC:", round(current_aic, 4), "\n")
if (current_aic < best_aic) {
best_aic <- current_aic
best_model <- model
best_spec <- spec_name
}
}, error = function(e) {
cat(spec_name, "- Failed\n")
})
}
# Initialize row with NAs
new_row <- data.frame(
Dependent_Variable = dep_var,
ARDL_Specification = "Failed",
AIC = NA,
BIC = NA,
Intercept_Coeff = NA, Intercept_SE = NA, Intercept_tStat = NA, Intercept_pValue = NA,
IPI_Japan_Coeff = NA, IPI_Japan_SE = NA, IPI_Japan_tStat = NA, IPI_Japan_pValue = NA,
IPI_India_Coeff = NA, IPI_India_SE = NA, IPI_India_tStat = NA, IPI_India_pValue = NA,
Bilateral_ExchRate_Coeff = NA, Bilateral_ExchRate_SE = NA, Bilateral_ExchRate_tStat = NA, Bilateral_ExchRate_pValue = NA,
Volatility_Coeff = NA, Volatility_SE = NA, Volatility_tStat = NA, Volatility_pValue = NA,
Cointegration_Status = "Not Tested",
stringsAsFactors = FALSE
)
if (!is.null(best_model)) {
cat("\nBest model:", best_spec, "\n")
# Get model statistics
new_row$ARDL_Specification <- best_spec
new_row$AIC <- round(best_aic, 4)
new_row$BIC <- round(BIC(best_model), 4)
# Extract long-run coefficients
tryCatch({
lr_coeffs <- multipliers(best_model)
cat("Long-run coefficients extracted:\n")
print(lr_coeffs)
# Map coefficients to dataframe
for (i in 1:nrow(lr_coeffs)) {
term <- as.character(lr_coeffs$Term[i])
coeff <- lr_coeffs$Estimate[i]
se <- lr_coeffs$`Std. Error`[i]
tstat <- lr_coeffs$`t value`[i]
pval <- lr_coeffs$`Pr(>|t|)`[i]
if (term == "(Intercept)") {
new_row$Intercept_Coeff <- coeff
new_row$Intercept_SE <- se
new_row$Intercept_tStat <- tstat
new_row$Intercept_pValue <- pval
} else if (term == "ipi_japan") {
new_row$IPI_Japan_Coeff <- coeff
new_row$IPI_Japan_SE <- se
new_row$IPI_Japan_tStat <- tstat
new_row$IPI_Japan_pValue <- pval
} else if (term == "ipi_india") {
new_row$IPI_India_Coeff <- coeff
new_row$IPI_India_SE <- se
new_row$IPI_India_tStat <- tstat
new_row$IPI_India_pValue <- pval
} else if (term == "ind_jap_bila_exch") {
new_row$Bilateral_ExchRate_Coeff <- coeff
new_row$Bilateral_ExchRate_SE <- se
new_row$Bilateral_ExchRate_tStat <- tstat
new_row$Bilateral_ExchRate_pValue <- pval
} else if (term == "volatility") {
new_row$Volatility_Coeff <- coeff
new_row$Volatility_SE <- se
new_row$Volatility_tStat <- tstat
new_row$Volatility_pValue <- pval
}
}
}, error = function(e) {
cat("Failed to extract long-run coefficients:", e$message, "\n")
})
# Test cointegration
tryCatch({
bounds_test <- bounds_f_test(best_model, case = 2)
f_stat <- bounds_test$statistic
upper_bound <- bounds_test$tab[1, 3]
lower_bound <- bounds_test$tab[1, 2]
if (f_stat > upper_bound) {
new_row$Cointegration_Status <- "Cointegrated"
} else if (f_stat < lower_bound) {
new_row$Cointegration_Status <- "No Cointegration"
} else {
new_row$Cointegration_Status <- "Inconclusive"
}
}, error = function(e) {
new_row$Cointegration_Status <- "Test Failed"
})
}
# Add row to master results
results_master <- rbind(results_master, new_row)
cat("Row added to results\n")
}
# Display results
cat("\n", rep("=", 80), "\n")
cat("FINAL RESULTS SUMMARY\n")
cat(rep("=", 80), "\n")
print(results_master)
# Save main results
cat("\nSaving main results to CSV...\n")
write.csv(results_master, "ARDL_Complete_Results.csv", row.names = FALSE)
# Create simplified coefficient table
coeff_table <- results_master[, c("Dependent_Variable", "ARDL_Specification", "AIC",
"IPI_Japan_Coeff", "IPI_Japan_pValue",
"IPI_India_Coeff", "IPI_India_pValue",
"Bilateral_ExchRate_Coeff", "Bilateral_ExchRate_pValue",
"Volatility_Coeff", "Volatility_pValue")]
cat("Saving coefficient summary to CSV...\n")
write.csv(coeff_table, "ARDL_Coefficients_Summary.csv", row.names = FALSE)
# Create publication table with formatted coefficients
pub_table <- data.frame(
Dependent_Variable = results_master$Dependent_Variable,
ARDL_Spec = results_master$ARDL_Specification,
AIC = results_master$AIC,
IPI_Japan = paste0(
round(results_master$IPI_Japan_Coeff, 4),
ifelse(results_master$IPI_Japan_pValue < 0.01, "***",
ifelse(results_master$IPI_Japan_pValue < 0.05, "**",
ifelse(results_master$IPI_Japan_pValue < 0.10, "*", ""))),
" (", round(results_master$IPI_Japan_SE, 4), ")"
),
IPI_India = paste0(
round(results_master$IPI_India_Coeff, 4),
ifelse(results_master$IPI_India_pValue < 0.01, "***",
ifelse(results_master$IPI_India_pValue < 0.05, "**",
ifelse(results_master$IPI_India_pValue < 0.10, "*", ""))),
" (", round(results_master$IPI_India_SE, 4), ")"
),
Bilateral_ExchRate = paste0(
round(results_master$Bilateral_ExchRate_Coeff, 4),
ifelse(results_master$Bilateral_ExchRate_pValue < 0.01, "***",
ifelse(results_master$Bilateral_ExchRate_pValue < 0.05, "**",
ifelse(results_master$Bilateral_ExchRate_pValue < 0.10, "*", ""))),
" (", round(results_master$Bilateral_ExchRate_SE, 4), ")"
),
Volatility = paste0(
round(results_master$Volatility_Coeff, 4),
ifelse(results_master$Volatility_pValue < 0.01, "***",
ifelse(results_master$Volatility_pValue < 0.05, "**",
ifelse(results_master$Volatility_pValue < 0.10, "*", ""))),
" (", round(results_master$Volatility_SE, 4), ")"
),
Cointegration = results_master$Cointegration_Status,
stringsAsFactors = FALSE
)
cat("Saving publication-ready table to CSV...\n")
write.csv(pub_table, "ARDL_Publication_Table.csv", row.names = FALSE)
# Check files were created
cat("\nFiles created:\n")
if (file.exists("ARDL_Complete_Results.csv")) {
cat("✓ ARDL_Complete_Results.csv (", file.size("ARDL_Complete_Results.csv"), " bytes)\n")
} else {
cat("✗ ARDL_Complete_Results.csv not created\n")
}
if (file.exists("ARDL_Coefficients_Summary.csv")) {
cat("✓ ARDL_Coefficients_Summary.csv (", file.size("ARDL_Coefficients_Summary.csv"), " bytes)\n")
} else {
cat("✗ ARDL_Coefficients_Summary.csv not created\n")
}
if (file.exists("ARDL_Publication_Table.csv")) {
cat("✓ ARDL_Publication_Table.csv (", file.size("ARDL_Publication_Table.csv"), " bytes)\n")
} else {
cat("✗ ARDL_Publication_Table.csv not created\n")
}
# Display quick summary
cat("\n", rep("-", 60), "\n")
cat("QUICK SUMMARY\n")
cat(rep("-", 60), "\n")
successful_models <- sum(!is.na(results_master$AIC))
cat("Successfully fitted models:", successful_models, "out of", nrow(results_master), "\n")
if (successful_models > 0) {
cat("\nSignificant coefficients (p < 0.05):\n")
vars <- c("IPI_Japan", "IPI_India", "Bilateral_ExchRate", "Volatility")
for (var in vars) {
pval_col <- paste0(var, "_pValue")
sig_count <- sum(results_master[[pval_col]] < 0.05, na.rm = TRUE)
total_count <- sum(!is.na(results_master[[pval_col]]))
cat(var, ":", sig_count, "/", total_count, "\n")
}
}
cat("\nAnalysis completed! Check the CSV files for detailed results.\n")
View(export)
